Postfgresql: 
	version psql (PostgreSQL) 10.7
To run Postgresql 
cmd = 'psql -U postgres' here after -U username is supplied in ths case 'postgres'
prompted for password
welcome txt "postgres=#    "


'\l' :- This psql cmd is used to list all databases. 

'\c' :- This cmd is used to show connected database.

'\c <database_name>' : To connect to a database.

'\d' :- This cmd list all tables in selected database.

'\d <table_name>' :- This cmd is used to describe table.

'CREATE DATABASE dummydb;' :- This query created database 'dummydb'.

'DROP DATABASE dummydb;' :- This query drops the dummydb.

To create a table following is the query to execute:

SYNTAX:
CREATE TABLE table_name(
column1 datatype(size) constraints,
column2 datatype(size) constraints,
column3 datatype(size) constraints,
);   

eg:

CREATE TABLE employees(
ID INT PRIMARY KEY NOT NULL,
NAME TEXT NOT NULL,
AGE INT NOT NULL,
ADDRESS CHAR(50),
SALARY REAL,
);   

To  Drop a table we use:
SYNTAX:
DROP TABLE <table_name>;

To delete rows from a table:
Syntax:
TRUNCATE TABLE <table_name>;

SELECT:
[SELECT column1,column2,column3 FROM table_name; ]
select * from actor;

INSTER:
[INSERT INTO table_name (column1,column2,column3,column4) VALUES (value1,value2,value3,value4);]
Insert into actor (actor_id,first_name,last_name) values(201,'Robert','Downey Jr');

DELETE:
[DELETE FROM table_name WHERE column1=value1;]
delete from actor where actor_id=201;

UPDATE:
[UPDATE table_name SET column1=value , column2=value, Where condition;]
update actor set first_name='Case' where actor_id=1;
note the update cmd will update all rows by given values if where clause is not supplied.

Order by:
[SELECT columns from table_name ORDER BY column [asc|desc];]
select * from actor order by actor_id desc;

Like:
select * from actor where first_name like 'J%h%y';
'%' matches pattern
'%s' looks for string before s.
's%' looks for string after s.
'%s%' it will accept string befor and after s.
here in Like there are two symbols '%' and '_'
'%' means zero,one or multiple chars or numbers.
'_' means single char or number.


IN and NOT IN :
these keyword checks for the values are in given condition or not
eg. select * from actor where first_name IN ('Chris','Johnny','Julia');

select * from actor where first_name not IN ('Chris','Johnny','Julia');

DISINCT: this will only display distinct itmes from a column
eg. select DISTINCT column from table.

LIMIT : this is used to limit the no. of rows returned by select query.

eg. select * from COMPANY limit 3;
offset is also used with limit. offset means limiting from a perticular offset.

eg. select * from COMPANY limit 3 offset 2;

HAVING: this is used with group with condition
SELECT column1, column2
FROM table1, table2
WHERE [ conditions ]
GROUP BY column1, column2
HAVING [ conditions ];
eg. SELECT NAME FROM COMPANY GROUP BY name HAVING count(name) < 2;

Constrained are rules on data columns on the table.
NOT NULL: values should not be null or column should not be empty.
Unique: all values should be unique.
primary key: Uniquely identifies each row/record in a database table.

foreign key: Constrains data based on columns in other tables.

check: checks the condition.

#Creating foreign key in table.

create table department(id int primary key not null,dept char(50) not null, emp_id int, foreign key (emp_id) references company (idd
));

JOINS: Joins clause is used to combine records from two or more tables in a database. A JOIN is a means for combining fields from two tables by using values common to each. 

types of joins:
Cross join, Inner join, Left outer join, Right outer join full outer join.

CROSS JOIN: SELECT ... FROM table1 CROSS JOIN table2 ...

Inner join:SELECT table1.column1,table2.column2 FROM table1 INNER JOIN table2 ON table1.common_filed = table2.common_field;

Left outer join: SELECT ... FROM table1 LEFT OUTER JOIN table2 ON conditional_expression ...

Right outer join :SELECT ... FROM table1 RIGHT OUTER JOIN table2 ON conditional_expression ...

full outer join : SELECT ... FROM table1 FULL OUTER JOIN table2 ON conditional_expression ...
